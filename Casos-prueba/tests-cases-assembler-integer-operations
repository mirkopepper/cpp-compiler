assembler

integer resSumaInteger,resRestaInteger,resMulInteger,resDivInteger;
allow double to integer;

{

    && asignacion de valores a variables integer

    && conversion en asignacion
    resSumaInteger:=_d30.0;
    resRestaInteger:=_d40.0;

    && sin conversion en asignacion
    resMulInteger:=_i50;
    resDivInteger:=_i60;

    && asignaciones con sumas, restas, multiplicaciones y divisiones, solo con enteros

    resSumaInteger:=resSumaInteger+_i1;
    && resultado: 31

    resRestaInteger-=_i1;
    && resultado: 39

    resMulInteger:=resMulInteger*_i2;
    && resultado: 100

    resDivInteger:=resDivInteger/_i2;
    && resultado: 30

    && chequeo si la suma funciona correctamente
    if(resSumaInteger=_i31)
        print("la suma entre enteros se efectuo de manera exitosa");
    else
        print("la suma entre enteros no funciona");
    endif

    && chequeo si la resta funciona correctamente
    if(resRestaInteger=_i39)
        print("la resta entre enteros se efectuo de manera exitosa");
    else
        print("la resta entre enteros no funciona");
    endif

    && chequeo si la multiplicacion funciona correctamente, con conversion en condicion
    if(resMulInteger=_d100.0)
        print("la multiplicacion entre enteros se efectuo de manera exitosa. Tambien la conversion funciona");
    else
        print("la multiplicacion entre enteros no funciona");
    endif

    && chequeo si la division funciona correctamente, con conversion en condicion
    if(resDivInteger=_d30.0)
        print("la division entre enteros se efectuo de manera exitosa. Tambien la conversion funciona");
    else
        print("la division entre enteros no funciona");
    endif

}
