assembler

double resSumaDouble,resRestaDouble,resMulDouble,resDivDouble;
allow double to integer;

{

    && asignacion de valores a variables doubles
    && asignaciones sin conversion
    resSumaDouble:=_i3;
    resRestaDouble:=_i4;

    && asignacion con conversion
    resMulDouble:=_i5;
    resDivDouble:=_i6;

    && asignaciones con sumas, restas, multiplicaciones y divisiones, solo con doubles

    resSumaDouble:=resSumaDouble+_d1.;
    && resultado: 4.0

    && chequeo si la suma funciona correctamente, con conversion incluida
    if(resSumaDouble=_i4)
        print("la suma entre doubles se efectuo de manera exitosa. Tambien la conversion funciona");
    else
        print("la suma entre doubles no funciona");
    endif

    resRestaDouble-=_d1.;
    && resultado: 3.0

    && chequeo si la resta funciona correctamente, con conversion incluida
    if(resRestaDouble=_i3)
        print("la resta entre doubles se efectuo de manera exitosa. Tambien la conversion funciona");
    else
        print("la resta entre doubles no funciona");
    endif

    resMulDouble:=resMulDouble*_d2.;
    && resultado: 10.0

    && chequeo si la multiplicacion funciona correctamente
    if(resMulDouble=_d10.0)
        print("la multiplicacion entre doubles se efectuo de manera exitosa");
    else
        print("la multiplicacion entre doubles no funciona");
    endif

    resDivDouble:=resDivDouble/_d2.;
    && resultado: 3.0

    && chequeo si la division funciona correctamente
    if(resDivDouble=_d3.0)
        print("la division entre doubles se efectuo de manera exitosa");
    else
        print("la division entre doubles no funciona");
    endif

}
